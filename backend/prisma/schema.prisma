generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Organization {
  id            Int           @id @default(autoincrement())
  name          String
  code          String?       @unique
  contactPerson String?
  hourlyRate    Decimal       
  kmRate        Decimal       
  address       String?
  ico           String?
  dic           String?
  email         String?
  phone         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  createdBy     Int?
  
  services      Service[]
  workRecords   WorkRecord[]  @relation("WorkRecordOrganization")
  billedRecords WorkRecord[]  @relation("WorkRecordBillingOrg")
  hardware      Hardware[]
  invoices      Invoice[]
  billingDrafts BillingDraft[]
  receivedInvoiceItems ReceivedInvoiceItem[]
}

model Service {
  id             Int          @id @default(autoincrement())
  organizationId Int
  serviceName    String
  description    String?
  monthlyPrice   Decimal      
  isActive       Boolean      @default(true)
  
  organization   Organization @relation(fields: [organizationId], references: [id])
}

model WorkRecord {
  id             Int          @id @default(autoincrement())
  organizationId Int
  date           DateTime
  worker         String
  description    String
  minutes        Int          @default(0)
  timeFrom       String?      // Čas začátku práce (HH:MM)
  timeTo         String?      // Čas konce práce (HH:MM)
  branch         String?      // Pobočka organizace
  kilometers     Int          @default(0)
  month          Int?
  year           Int?
  price          Decimal?
  projectCode    String?      // Kód zakázky (např. "O - Oresi", "DOH - Oresi - Dohnal")
  billingOrgId   Int?         // ID organizace pro fakturaci (pokud se liší od organizationId)
  createdAt      DateTime     @default(now())
  createdBy      Int?

  organization   Organization @relation(fields: [organizationId], references: [id], name: "WorkRecordOrganization")
  billingOrg     Organization? @relation(fields: [billingOrgId], references: [id], name: "WorkRecordBillingOrg")

  @@index([month, year])
  @@index([projectCode])
}

model Hardware {
  id                   Int          @id @default(autoincrement())
  organizationId       Int
  itemName             String
  description          String?
  quantity             Int
  unitPrice            Decimal      
  totalPrice           Decimal      
  month                Int
  year                 Int
  status               String       @default("NEW")
  sourceInvoiceItemId  Int?         @unique
  assignedAt           DateTime?
  
  organization         Organization @relation(fields: [organizationId], references: [id])
  invoiceItem          ReceivedInvoiceItem? @relation("HardwareInvoiceItem", fields: [sourceInvoiceItemId], references: [id])
}

model Invoice {
  id             Int          @id @default(autoincrement())
  organizationId Int
  invoiceNumber  String       @unique
  month          Int
  year           Int
  totalAmount    Decimal      
  totalVat       Decimal      
  status         String @default("DRAFT")
  generatedAt    DateTime     @default(now())
  pdfUrl         String?
  pohodaXml      String?
  notes          String?
  
  organization   Organization @relation(fields: [organizationId], references: [id])
  
  @@index([month, year])
}

model BillingDraft {
  id             Int           @id @default(autoincrement())
  organizationId Int
  month          Int
  year           Int
  data           String
  updatedBy      Int?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  organization   Organization @relation(fields: [organizationId], references: [id])

  @@unique([organizationId, month, year])
}

model ReceivedInvoice {
  id              Int       @id @default(autoincrement())
  supplierName    String
  supplierIco     String?
  invoiceNumber   String
  issueDate       DateTime?
  totalWithoutVat Decimal?
  totalWithVat    Decimal?
  currency        String    @default("CZK")
  status          String    @default("PENDING")
  sourceFilePath  String?
  ocrPayload      String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  createdBy       Int?

  items ReceivedInvoiceItem[]
}

model ReceivedInvoiceItem {
  id                     Int       @id @default(autoincrement())
  invoiceId              Int
  itemName               String
  description            String?
  quantity               Decimal?
  unitPrice              Decimal?
  totalPrice             Decimal?
  vatRate                Decimal?
  status                 String    @default("PENDING")
  assignedOrganizationId Int?
  assignedMonth          Int?
  assignedYear           Int?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt

  invoice                ReceivedInvoice @relation(fields: [invoiceId], references: [id])
  assignedOrganization   Organization?   @relation(fields: [assignedOrganizationId], references: [id])
  hardware               Hardware?       @relation("HardwareInvoiceItem")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
